package me.jessyan.mvparms.demo.drawables;


import me.jessyan.mvparms.demo.R;

import android.content.Context;
import android.graphics.drawable.Drawable;
import android.util.LongSparseArray;

import com.github.megatronking.svg.support.SVGDrawable;
import com.github.megatronking.svg.support.SVGHelper;

/**
 * AUTO-GENERATED FILE.  DO NOT MODIFY.
 * 
 * This class was automatically generated by the
 * SVG-Generator. It should not be modified by hand.<br><br>
 *
 * Call the follow in your Application: 
 *
 * <pre class="prettyprint">
 * public class MyApplication extends Application {
 *
 *    public void onCreate() {
 *        SVGLoader.load(this)
 *    }
 *
 * }
 * </pre>
 */
public class SVGLoader  {

    private static LongSparseArray<Drawable.ConstantState> sPreloadedDrawables;

    public static void load(Context context) {
        sPreloadedDrawables = SVGHelper.hackPreloadDrawables(context.getResources());
        if (sPreloadedDrawables == null) {
            return;
        }
        add(context, R.drawable.ic_alipay, SVGDrawable.SVGDrawableConstantState.create(new ic_alipay(context)));
        add(context, R.drawable.ic_arrow_right, SVGDrawable.SVGDrawableConstantState.create(new ic_arrow_right(context)));
        add(context, R.drawable.ic_closeeye, SVGDrawable.SVGDrawableConstantState.create(new ic_closeeye(context)));
        add(context, R.drawable.ic_login_et_delete, SVGDrawable.SVGDrawableConstantState.create(new ic_login_et_delete(context)));
        add(context, R.drawable.ic_openeye, SVGDrawable.SVGDrawableConstantState.create(new ic_openeye(context)));
        add(context, R.drawable.ic_pin_left, SVGDrawable.SVGDrawableConstantState.create(new ic_pin_left(context)));
        add(context, R.drawable.ic_pin_left_withe, SVGDrawable.SVGDrawableConstantState.create(new ic_pin_left_withe(context)));
        add(context, R.drawable.ic_yellow_exclamation_point, SVGDrawable.SVGDrawableConstantState.create(new ic_yellow_exclamation_point(context)));
    }

    private static void add(Context context, int resId, SVGDrawable.SVGDrawableConstantState state) {
        sPreloadedDrawables.put(SVGHelper.resKey(context, resId), state);
    }

}